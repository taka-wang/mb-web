machine:
    #timezone:
    #    Asia/Taipei
    node:
        # Circle will use node v4.0.0
        version: 4.0.0
    services:
        - docker

dependencies:
    cache_directories:
        - /opt/circleci/nodejs/v4.0.0/bin
        - /opt/circleci/nodejs/v4.0.0/lib/node_modules
    override:
        - npm install -g newman
        - sudo apt-get install python-dev && sudo pip install --upgrade docker-compose==1.8.0

test:
    pre:
        - docker version
        - docker-compose version
        #- docker build --no-cache=true -t conf   -f conf/Dockerfile.x86 .
        #- docker build --no-cache=true -t worker -f worker/Dockerfile.x86 .
        #- docker build --no-cache=true -t test   -f test/Dockerfile.x86 .
    override:
        #- docker run -it conf
        #- docker run -it worker
        #- docker run -it test
        
        #---------------------- PACKING -----------------------------------
        # build cache
        - docker build -t golang:x86-cache -f release/Dockerfile.x86-cache .
        # build builder
        - docker build -t builder:x86 --no-cache=true -f release/Dockerfile.x86-build .
        - docker run -itd --name=builder builder:x86
        # copy binary to release folder
        - docker cp builder:/web release/
        - cp config.toml release/
        # build release image
        - docker build -t edgepro/mb-web:x86 --no-cache=true -f release/Dockerfile.x86-pack release/.

        #- docker build --no-cache=true -t edgepro/mb-web:x86 -f Dockerfile.x86 .
        - docker-compose -f docker-compose.x86 up -d
        - sleep 20
        #---------------------- POSTMAN TEST -----------------------------------
        - ./genenv.sh # get slave ip from docker container
        - newman run https://www.getpostman.com/collections/46b8d8a5a4d5bce2fbc7 -e /tmp/postman-env.json --reporters cli,junit --reporter-junit-export $CIRCLE_TEST_REPORTS/junit/postman.xml
        
        #---------------------- SHELL TEST -------------------------------------
        - ./test.sh
        - docker-compose -f docker-compose.x86 stop
        
        #---------------------- CI w/ GO TEST ----------------------------------
        #- docker-compose -f test/docker-compose.x86 rm -f -a
        - docker-compose -f test/docker-compose.x86 build
        - docker-compose -f test/docker-compose.x86 up --abort-on-container-exit
        - cat /var/tmp/success      # test
        #- rm -f /var/tmp/success   # drone only
    #post:

# publish to dockerhub
deployment:
    hub:
        branch: master
        commands:
            - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
            - docker tag edgepro/mb-web:x86 edgepro/mb-web:latest
            - docker push edgepro/mb-web:latest
            - docker push edgepro/mb-web:x86